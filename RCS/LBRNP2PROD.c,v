head	1.3;
access;
symbols;
locks
	saclib:1.3; strict;
comment	@ * @;


1.3
date	97.05.15.19.28.38;	author Chris;	state spec;
branches;
next	1.2;

1.2
date	97.05.13.20.15.46;	author Chris;	state typo;
branches;
next	1.1;

1.1
date	97.05.13.19.52.35;	author Chris;	state new;
branches;
next	;


desc
@Integer to logarithmic binary rational number.
@


1.3
log
@specification needed to be cleaned up a bit.
@
text
@/*======================================================================
                      s <- LBRNP2PROD(r,k)

Logarithmic binary rational number power of 2 product.

Inputs
      r : a logarithmic binary rational number.
      k : a BETA-digit.
Outputs
      s : a logarithmic binary rational representation of r*2^k

======================================================================*/
#include "saclib.h"

Word LBRNP2PROD(r,k)
       Word r,k;
{
       Word s,r1,r2;

Step1: /* Construct r*2^k. */
       if (r == 0)
	 s = 0;
       else {
	 FIRST2(r,&r1,&r2);
	 s = LIST2(r1, r2 - k); }

Return: /* Prepare to return. */
       return (s);
}
@


1.2
log
@Big typo ... I included the code for the wrong function!
@
text
@d8 1
a8 1
      k : A BETA-digit.
d10 1
a10 1
      s: Logarithmic binary rational representation of r*2^k;
d20 1
d27 2
a28 1
       return s;
@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
/*===========================================================================
                               L <- ILBRN(I)
d4 1
a4 1
Integer to logarithmic binary rational number.
d7 4
a10 1
  I  : in Z.
d12 1
a12 3
Outputs
  L  : the logarithmic binary rational representation of L.
===========================================================================*/
d15 2
a16 2
Word ILBRN(I)
       Word I;
d18 1
a18 1
  Word L,n,Ip;
d20 5
a24 6
  if (I == 0)
    L = 0;
  else {
    n = IORD2(I);
    Ip = IDP2(I,n);
    L = LIST2(Ip,-n);}
d26 1
a26 1
  return L;
@
