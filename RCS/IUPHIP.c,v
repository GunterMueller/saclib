head	1.2;
access;
symbols;
locks
	saclib:1.2; strict;
comment	@ * @;


1.2
date	98.11.10.19.29.15;	author Chris;	state typo;
branches;
next	1.1;

1.1
date	98.04.23.20.27.02;	author George;	state new;
branches;
next	;


desc
@*
Integral univariate polynomial to hardware interval polynomial.
univariate polynomial.
@


1.2
log
@Direct reference was made to hfloats.h rather than saclib.h.
@
text
@/*======================================================================
                           IUPHIP(A; B,t)

Integral univariate polynomial to hardware interval polynomial.

Input
   A : a non-zero univariate integral polynomial.

Outputs
   B : the  hardware interval polynomial that results from
       replacing each coefficient of A with the smallest
       hardware interval containing it.
   t : if t = 0, the program failed because of exponent
       overflow and B is undefined.  Otherwise t = 1.
======================================================================*/
#include "saclib.h"

void IUPHIP(A, B_,t_)
        Word A;
        interval **B_;
        BDigit *t_;
{
        BDigit i,n,t;
        interval *B;
        Word Ap,a;

Step1: /* Get array for B. */
        n = PDEG(A);
        B = GETHIPARRAY(n);

Step2: /* /* Convert coefficients. */
        Ap = A;
        for (i = n; i >= 0; i--) {
           if (Ap == NIL || FIRST(Ap) < i)
              B[i] = izero;
           else {
              Ap = RED(Ap);
              ADV(Ap,&a,&Ap);
              IHI(a,&B[i],&t);
              if (t == 0) {
                 FREEARRAY(B);
                 goto Return; } } }

Return: /* Return B and t.*/
        *B_ = B;
        *t_ = t;
        return;
}
@


1.1
log
@Initial revision
@
text
@a4 1
univariate polynomial.
d19 3
a21 3
	Word A;
	interval **B_;
	BDigit *t_;
d23 3
a25 3
	BDigit i,n,t;
	interval *B;
	Word Ap,a;
d28 2
a29 2
	n = PDEG(A);
	B = GETHIPARRAY(n);
d32 11
a42 10
	Ap = A;
	for (i = n; i >= 0; i--) {
	   if (Ap == NIL || FIRST(Ap) < i)
	      B[i] = izero;
	   else {
	      Ap = RED(Ap);
	      ADV(Ap,&a,&Ap);
	      IHI(a,&B[i],&t);
	      if (t == 0)
	         goto Return; } }
d45 3
a47 3
	*B_ = B;
	*t_ = t;
	return;
@
