head	1.2;
access;
symbols;
locks
	saclib:1.2; strict;
comment	@ * @;


1.2
date	94.08.21.12.26.40;	author George;	state spec;
branches;
next	1.1;

1.1
date	94.08.21.12.17.15;	author saclib;	state spec;
branches;
next	;


desc
@Integral polynomial binary homothetic transformation.
@


1.2
log
@GAMMA integer was replaced by C integer.
@
text
@/*===========================================================================
			    B <- IPBHT(r,A,i,k)

Integral polynomial binary homothetic transformation.

Inputs
  r : A BETA-digit.  r >= 0.
  A : an element of Z[x_1,...,x_r].
  i : 1 <= i <= r.
  k : a BETA-digit.

Outputs
  B : an element of Z[x_1,...,x_r].  
      B(x_1,...,x_i,...,x_r) = 
      2^{-h}A(x_1,...,x_{i-1},2^kx_i,x_{i+1},...,x_r), where h is
      uniquely determined so that B is an integral polynomial not
      divisible by 2.
===========================================================================*/
#include "saclib.h"

Word IPBHT(r,A,i,k)

       Word r,A,i,k;
{
       Word B;
       Word At,Bt;

Step1: /* A = 0. */
       if (A == 0) {
	  B = 0;
	  goto Return; }

Step2: /* i = 1. */
       if (i == 1) {
	  B = IPBHTLV(r,A,k);
	  goto Return; }

Step3: /* i > 1. */
       At = PCPV(r,A,1,i);
       Bt = IPBHTLV(r,At,k);
       B = PICPV(r,Bt,1,i);
       
Return: /* Prepare for return. */
       return(B);
}
@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
/*======================================================================
                     B <- IPBHT(r,A,i,k)
d8 1
a8 1
  A : an element of Z[X1,...,Xr].
d10 1
a10 1
  k : gamma-integer.
d13 6
a18 5
  B : an element of Z[X1,...,Xr].  
      B(X1,...,Xi,...,Xr) = 
      2^{-h}A(X1,...,X{i-1},2^kXi,X{i+1},...,Xr), where h is uniquely
      determined so that B is an integral polynomial not divisible by 2.
======================================================================*/
d28 9
a36 13
Step1: /* A=0. */
       if (A == 0)
         {
         B = 0;
         goto Return;
         }

Step2: /* i=1. */
       if (i == 1)
         {
         B = IPBHTLV(r,A,k);
         goto Return;
         }
d38 1
a38 1
Step3: /* i>1. */
d42 2
a43 2

Return:
@
