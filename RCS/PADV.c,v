head	1.2;
access;
symbols;
locks
	saclib:1.2; strict;
comment	@ * @;


1.2
date	94.01.15.11.26.56;	author Mark;	state bug;
branches;
next	1.1;

1.1
date	94.01.09.14.22.56;	author Mark;	state new;
branches;
next	;


desc
@Polynomial advance.
@


1.2
log
@Ap should be set to 0 rather than NIL if PRED(A) = 0.
@
text
@/*===========================================================================
			      PADV(A; e,a,Ap)

Polynomial advance.

Input
  A : in R[x], where R is a ring.

Outputs
  e : a BETA-digit, the degree of A.
  a : in R, the leading coefficient of A.
  Ap : in R[x], the reductum of A.
===========================================================================*/
#include "saclib.h"

void PADV(A,e_,a_,Ap_)
       Word A,*e_,*a_,*Ap_;
{
       Word e,a,Ap;

Step1: /* Compute. */
       if (A == 0) {
	  e = 0;
	  a = 0;
	  Ap = 0; }
       else {
	  ADV2(A,&e,&a,&Ap);
	  if (Ap == NIL)
	     Ap = 0; }

Return: /* Prepare for return. */
       *e_ = e;
       *a_ = a;
       *Ap_ = Ap;
       return;
}
@


1.1
log
@Initial revision
@
text
@d26 1
a26 1
       else
d28 2
@
