head	1.2;
access;
symbols;
locks
	saclib:1.2; strict;
comment	@ * @;


1.2
date	95.11.08.16.57.30;	author Werner;	state algo;
branches;
next	1.1;

1.1
date	95.08.25.12.00.36;	author George;	state new;
branches;
next	;


desc
@Logarithmic binary rational interval write.
@


1.2
log
@New version uses LBRNWRITE.
@
text
@/*=====================================================================
			  LBRIWRITE(I)

Logarithmic binary rational interval write.

Input
   I : a logarithmic binary rational interval in internal
       representation. I is the list (<a>,<b>) consisting of
       the logarithmic representations of the binary rational 
       endpoints a and b of the interval.
       If a = b, I represents the one-point interval [a].
       Otherwise, a < b and I represents the open interval (a,b).

Outputs (to the output stream)
  Canonical external representation of I.
  If I is the one-point interval [a], the output is [<a>] where
  <a> is the canonical external representation of a.
  If I is the open interval (a,b), the output is
    (<a>,<b>)
  where
  <a> and <b> are the canonical external representations of a and b.

Side effect
   The interval I is written in the output stream.
======================================================================*/
#include "saclib.h"

void LBRIWRITE(I)
       Word I;
{
       Word a,b;

Step1: /* Two cases. */
       FIRST2(I,&a,&b);
       if (EQUAL(a,b)) {
	  CWRITE('[');
	  LBRNWRITE(a);
	  CWRITE(']'); }
       else {
	  CWRITE('(');
	  LBRNWRITE(a);
	  CWRITE(',');
	  LBRNWRITE(b);
	  CWRITE(')'); }

Return: /* Return */
       return;
}
@


1.1
log
@Initial revision
@
text
@d7 6
a12 1
   I : a logarithmic binary rational interval.
d14 9
d24 1
a24 5
   The interval I is written in the output stream.  Let
   a and b be the left and right endpoints of I,
   respectively.  If a = b, the form of the output is
   [a].  If a < b, the form of the output is (a,b).  
   a and b are written as rational numbers using RNWRITE.
d37 1
a37 1
	  RNWRITE(LBRNRN(a));
d41 1
a41 1
	  RNWRITE(LBRNRN(a));
d43 1
a43 1
	  RNWRITE(LBRNRN(b));
@
