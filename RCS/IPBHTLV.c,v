head	1.2;
access;
symbols;
locks
	saclib:1.2; strict;
comment	@ * @;


1.2
date	94.08.21.12.27.00;	author George;	state spec;
branches;
next	1.1;

1.1
date	94.08.21.12.17.46;	author saclib;	state init;
branches;
next	;


desc
@Integral polynomial binary homothetic transformation, leading variable.
@


1.2
log
@GAMMA integer was replaced by C integer.
@
text
@/*===========================================================================
			    B <- IPBHTLV(r,A,k)

Integral polynomial binary homothetic transformation, leading variable.

Inputs
  r : A BETA-digit.  r >= 0.
  A : an element of Z[x_1,...,x_r].
  k : a BETA-digit.

Outputs
  B : an element of Z[x_1,...,x_r].  
      B(x_1,...,x_r) = 2^{-h} A(2^kx_1,x_2,...,x_r), where h is uniquely 
      determined so that B is an integral polynomial not divisible by 2.
===========================================================================*/
#include "saclib.h"

Word IPBHTLV(r,A,k)
       Word r,A,k;
{
       Word B;
       Word Ap,a,b,e;

Step1: /* A = 0. */
       if (A == 0) {
	  B = 0;
	  goto Return; }

Step2: /* r = 1. */
       if (r == 1) {
	  B = IUPBHT(A,k);
	  goto Return; }

Step3: /* r > 1. */
       B = NIL;
       Ap = A;
       while (Ap != NIL) {
	  ADV2(Ap,&e,&a,&Ap);
	  b = IPBHTLV(r - 1,a,k);
	  B = COMP2(b,e,B); }
       B = INV(B);

Return: /* Prepare for return. */
       return(B);
}
@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
/*======================================================================
                        B <- IPBHTLV(r,A,k)
d8 2
a9 2
  A : an element of Z[X1,...,Xr].
  k : gamma-integer.
d12 2
a13 2
  B : an element of Z[X1,...,Xr].  
      B(X1,...,Xr) = 2^{-h} A(2^kX1,X2,...,Xr), where h is uniquely 
d15 1
a15 1
======================================================================*/
d24 9
a32 13
Step1: /* A=0. */
       if (A == 0)
         {
         B = 0;
         goto Return;
         }

Step2: /* r=1. */
       if (r == 1)
         {
         B = IUPBHT(A,k);
         goto Return;
         }
d34 1
a34 1
Step3: /* r>1. */
d37 4
a40 6
       while (Ap != NIL)
         {
         ADV2(Ap,&e,&a,&Ap);
         b = IPBHTLV(r - 1,a,k);
         B = COMP2(b,e,B);
         }
d43 1
a43 1
Return:
@
