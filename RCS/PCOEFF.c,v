head	1.3;
access;
symbols;
locks
	saclib:1.3; strict;
comment	@ * @;


1.3
date	93.12.05.14.42.29;	author Mark;	state spec;
branches;
next	1.2;

1.2
date	93.12.05.14.38.42;	author Mark;	state bug;
branches;
next	1.1;

1.1
date	93.06.14.18.01.37;	author Mark;	state new;
branches;
next	;


desc
@Polynomial coefficient.
@


1.3
log
@The specs of i were changed to require it to be a BETA-digit.
@
text
@/*===========================================================================
			      a <- PCOEFF(A,i)

Polynomial coefficient.

Inputs
  A : a polynomial in r variables, r >= 1;
  i : a non-negative BETA-digit.

Output
  a : the coefficient of x^i in A, where x is the main variable.
===========================================================================*/
#include "saclib.h"

Word PCOEFF(A,i)
       Word A,i;
{
       Word Ap,e,a;

Step1: /* A = 0. */
       if (A == 0) {
	  a = 0;
	  goto Return; }

Step2: /* Search. */  
       Ap = A; 
       e = -1;
       do {
	  e = PDEG(Ap);
	  if (e <= i)
	     goto Step3;
	  else
	     Ap = PRED(Ap); }
       while (Ap != 0);

Step3: /* Pluck coefficient. */  
       if (e == i)
	 a = SECOND(Ap);
       else
	 a = 0;
       
Return: /*Prepare for return. */
       return(a);
}
@


1.2
log
@Fixed bug for input A = 0.  Also made the code clearer.
@
text
@d8 1
a8 1
  i : a non-negative integer.
@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
/*=========================================================================
                             a <- PCOEFF(A,i)
d12 1
a12 1
==========================================================================*/
d20 6
a25 1
Step1: /* Search. */  
d27 8
a34 7
       e = -1; 
       while (Ap != NIL) { 
	 e = FIRST(Ap);
	 if (e <= i)
	   goto Step2;
	 else 
	   Ap = RED2(Ap); }
d36 1
a36 1
Step2: /* Pluck coefficient. */  
@
